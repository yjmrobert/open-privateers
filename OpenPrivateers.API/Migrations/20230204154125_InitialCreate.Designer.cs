// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenPrivateers.API.Database;

#nullable disable

namespace OpenPrivateers.API.Migrations
{
    [DbContext(typeof(OpenPrivateersContext))]
    [Migration("20230204154125_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OpenPrivateers.API.Models.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeaponId");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.AttackPriority", b =>
                {
                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int>("ShipClassId")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.HasKey("WeaponId", "ShipClassId");

                    b.HasIndex("ShipClassId");

                    b.ToTable("AttackPriorities");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.DamageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DamageTypes");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ModuleInstallation", b =>
                {
                    b.Property<int>("ShipSystemId")
                        .HasColumnType("int");

                    b.Property<int>("ShipModuleId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ShipSystemId", "ShipModuleId");

                    b.HasIndex("ShipModuleId");

                    b.ToTable("ModuleInstallations");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ModuleProperty", b =>
                {
                    b.Property<int>("ShipModuleId")
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("ShipModuleId", "AttributeId");

                    b.HasIndex("AttributeId");

                    b.ToTable("ModuleProperties");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipClassId")
                        .HasColumnType("int");

                    b.Property<string>("VariantLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ShipClassId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ShipClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShipClasses");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ShipModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShipModules");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ShipSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("SystemHealth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("ShipSystems");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirDefense")
                        .HasColumnType("int");

                    b.Property<int>("AntiShipFire")
                        .HasColumnType("int");

                    b.Property<int>("Cooldown")
                        .HasColumnType("int");

                    b.Property<int>("DamagePerHit")
                        .HasColumnType("int");

                    b.Property<int?>("DamageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("LockOnTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrioritizedTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectilesPerShot")
                        .HasColumnType("int");

                    b.Property<int>("ShotsPerSalvo")
                        .HasColumnType("int");

                    b.Property<int>("SiegeFire")
                        .HasColumnType("int");

                    b.Property<string>("SubName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeaponClassificationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DamageTypeId");

                    b.HasIndex("WeaponClassificationId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.WeaponClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WeaponClassifications");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.WeaponInstallation", b =>
                {
                    b.Property<int>("WeaponSystemId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("WeaponSystemId", "WeaponId");

                    b.HasIndex("WeaponId");

                    b.ToTable("WeaponInstallations");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.WeaponSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("SystemHealth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShipId");

                    b.ToTable("WeaponSystems");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Ability", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.Weapon", null)
                        .WithMany("Abilities")
                        .HasForeignKey("WeaponId");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.AttackPriority", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.ShipClass", "ShipClass")
                        .WithMany()
                        .HasForeignKey("ShipClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenPrivateers.API.Models.Weapon", "Weapon")
                        .WithMany("AttackPriorities")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipClass");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ModuleInstallation", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.ShipModule", "ShipModule")
                        .WithMany()
                        .HasForeignKey("ShipModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenPrivateers.API.Models.ShipSystem", "ShipSystem")
                        .WithMany("ModuleInstallations")
                        .HasForeignKey("ShipSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipModule");

                    b.Navigation("ShipSystem");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ModuleProperty", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenPrivateers.API.Models.ShipModule", "ShipModule")
                        .WithMany("ModuleProperties")
                        .HasForeignKey("ShipModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("ShipModule");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Ship", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.ShipClass", "ShipClass")
                        .WithMany()
                        .HasForeignKey("ShipClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShipClass");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ShipSystem", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.Ship", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Weapon", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.DamageType", "DamageType")
                        .WithMany()
                        .HasForeignKey("DamageTypeId");

                    b.HasOne("OpenPrivateers.API.Models.WeaponClassification", "WeaponClassification")
                        .WithMany()
                        .HasForeignKey("WeaponClassificationId");

                    b.Navigation("DamageType");

                    b.Navigation("WeaponClassification");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.WeaponInstallation", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenPrivateers.API.Models.WeaponSystem", "WeaponSystem")
                        .WithMany("WeaponInstallations")
                        .HasForeignKey("WeaponSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Weapon");

                    b.Navigation("WeaponSystem");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.WeaponSystem", b =>
                {
                    b.HasOne("OpenPrivateers.API.Models.Ship", "Ship")
                        .WithMany()
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ShipModule", b =>
                {
                    b.Navigation("ModuleProperties");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.ShipSystem", b =>
                {
                    b.Navigation("ModuleInstallations");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.Weapon", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("AttackPriorities");
                });

            modelBuilder.Entity("OpenPrivateers.API.Models.WeaponSystem", b =>
                {
                    b.Navigation("WeaponInstallations");
                });
#pragma warning restore 612, 618
        }
    }
}
